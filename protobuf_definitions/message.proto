syntax = "proto3";

package HeroWorkshop;

message Empty {}

enum Ability {
    ABILITY_STRENGTH = 0;
    ABILITY_DEXTERITY = 1;
    ABILITY_CONSTITUTION = 2;
    ABILITY_INTELLIGENCE = 3;
    ABILITY_WISDOM = 4;
    ABILITY_CHARISMA = 5;
}

enum Training {
    TRAINING_NO_TRAINING = 0;
    TRAINING_TRAINED = 1;
    TRAINING_EXPERT = 2;
    TRAINING_MASTER = 3;
    TRAINING_LEGENDARY = 4;
}

enum Size {
    SIZE_TINY = 0;
    SIZE_SMALL = 1;
    SIZE_MEDIUM = 2;
    SIZE_LARGE = 3;
    SIZE_HUGE = 4;
    SIZE_GARGANTUAN = 5;
}

enum LawAlignment {
    LAW_ALIGNMENT_CHAOTIC = 0;
    LAW_ALIGNMENT_NEUTRAL = 1;
    LAW_ALIGNMENT_LAWFUL = 2;
}

enum GoodAlignment {
    GOOD_ALIGNMENT_EVIL = 0;
    GOOD_ALIGNMENT_NEUTRAL = 1;
    GOOD_ALIGNMENT_GOOD = 2;
}

message Alignment {
    LawAlignment lawAlignment = 1;
    GoodAlignment goodAlignment = 2;
}

message Skill {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message SkillTraining {
    Skill skill = 1;
    Training training = 2;
}

message Class {
    int32 id = 1;
    string name = 2;
    int32 baseHp = 3;
    Ability hpScalingAbility = 4;
    repeated SkillTraining initialProficiencies = 5;
}

message Feat {
    int32 id = 1;
    string name = 2;
    int32 level = 3;
    string description = 4;
    repeated int32 classes = 5;
}

message Trait {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message Tradition {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message Bloodline {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message Deity {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message Targeting {
    uint32 range = 1;
    string targetType = 2;
    oneof type {
        uint32 quantity = 3;
        uint32 burst = 4;
        uint32 cone = 5;
    }
}

message Duration {
    oneof type {
        Empty sustained = 1;
        uint32 minutes = 2;
        Empty instant = 3;
    }
}

message Heightened {
    oneof type {
        int32 levelDiff = 1; // i.e. Heightened (+1)
        int32 constLevel = 2; // i.e. Heightened (5th)
    }
}

// TODO: Should this be an enum?
message SpellComponent {
    int32 id = 1;
    string name = 2;
}

message Spell {
    int32 id = 1;
    string name = 2;
    uint32 level = 3;
    string description = 4;
    repeated int32 traits = 5;
    repeated int32 traditions = 6;
    Targeting targeting = 7;
    Duration duration = 8;
    int32 bloodline = 9;
    repeated int32 deities = 10;
    repeated Heightened heightens = 11;
    repeated SpellComponent components = 12;
    uint32 actions = 13;
}

message Language {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message Sense {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

// AKA Race
message Ancestry {
    uint32 hp = 1;
    Size size = 2;
    uint32 speed = 3;
    repeated Ability abilityBoosts = 4;
    repeated Ability abilityFlaws = 5;
    repeated int32 baseLanguages = 6;
    repeated int32 extraLanguages = 7;
    repeated int32 senses = 8;
}